spring:
  application:
    name: suendenbock-backend
  
  datasource:
    url: jdbc:h2:mem:suendenbock
    driver-class-name: org.h2.Driver
    username: sa
    password:
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=300s

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:NDA0RTYzNTI2NjU1NkE1ODZFMzI3MjM1NzUzODc4MkY0MTNGNDQyODQ3MkI0QjYyNTA2NDUzNjc1NjZCNTk3MA==}
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

# Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Server Configuration
server:
  port: 8080
  compression:
    enabled: true
  error:
    include-message: always

# Logging
logging:
  level:
    com.webgames.suendenbock: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# CORS Configuration
cors:
  allowed-origins: http://localhost:3000,http://localhost:8000,http://127.0.0.1:8000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  max-age: 3600

# Rate Limiting
rate-limit:
  capacity: 100
  refill-tokens: 10
  refill-duration-seconds: 1

# Email Verification
email:
  verification:
    token-expiration-hours: 24
    from: noreply@suendenbock.com
    subject: "Verifiziere deine E-Mail-Adresse"
